#Spring DataSource driver to be used to communicate the application with the database
spring.datasource.driverClassName=org.postgresql.Driver

# Specifies which db we use
spring.datasource.platform=postgres

# Specifies the URL to the database that was run locally on the default port 5432 and a database schema called "CPISdb" was created on the server
#https: //www.pgadmin.org/docs/pgadmin4/4.14/schema_dialog.html (if we use Hibernate to create tables, the SQL part from the link is not needed)
spring.datasource.url=jdbc:postgresql://localhost:5432/CPISdb

# Credentials for connection to the database server are specified
spring.datasource.username=bajo
spring.datasource.password=bajo

# Config server port
server.port= 8081

# Backend application URL's
APP_HOST = http://localhost:

# Frontend application URL's
APP_FRONT = http://localhost:
FRONT_PORT = 8082

# Instead of writing the SQL script to create the tables in the database, Hibernate creates the tables based on the @Entity annotations and when the application finishes working it drops them (create-drop)
# https: //www.baeldung.com/spring-boot-data-sql-and-schema-sql
# If we want to create a script for creating tables ourselves, we need to create and populate a file called schema.sql in the src / main / resources folder, which Spring Boot will automatically start when the application starts.
spring.jpa.hibernate.ddl-auto = create-drop

#Hibernate SQL queries are printed on the IDE console
spring.jpa.show-sql = true

# Formats the printout of SQL queries that Hibernate makes to the IDE console database
spring.jpa.properties.hibernate.format_sql=true

#https://docs.spring.io/spring-boot/docs/2.1.0.M1/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc
spring.datasource.initialization-mode=always

#https://stackoverflow.com/questions/43905119/postgres-error-method-org-postgresql-jdbc-pgconnection-createclob-is-not-imple
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Hibernate optimization of SQL queries for Postgres database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect

# Email service configuration
spring.mail.host = smtp.gmail.com
spring.mail.username = centralizedpharmacyis
spring.mail.password = Mali_Bajo00
spring.mail.port=587
spring.mail.properties.mail.smtp.starttls.enable = true